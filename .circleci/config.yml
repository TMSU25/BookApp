version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build

jobs:
  build:
    working_directory: ~/BookApp
    docker:
      - image: cimg/node:20.17.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Update npm
          command: sudo npm install -g npm@latest
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Run tests with Jest
          command: npm test
      - run:
          name: Audit packages for vulnerabilities
          command: npm audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Docker login
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Push Docker Image
          command: docker push $IMAGE_NAME
      - run:
          name: set-environment-variables
          command: echo $SERVER > server.crt && echo $PRIVATE_KEY > privatekey.pem

      - run:
          name: build-docker-image-for-integration-environment
          command: docker create -p 8443:8443 --name integration_app $IMAGE_NAME

      - run:
          name: copy-server-cert-and-private-key-accross
          command: docker cp ./privatekey.pem integration_app:/privatekey.pem; docker cp ./server.crt integration_app:/server.crt

      - run:
          name: start-docker-container
          command: docker start integration_app
      - run:
          name: zap-security-scan
          command: docker run --network host -v $(pwd):/zap/wrk:rw ghcr.io/zaproxy/zaproxy zap-baseline.py -t https://localhost:8443 -z "-config scanner.ignore_https_certificates=true" || true
          
  deploy:
    docker:
      - image: cimg/node:20.17.0
    steps:
      - run:
          name: Deploy to EC2
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export IMAGE_NAME=\"$IMAGE_NAME\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; rm -rf BookApp/; git clone https://github.com/TMSU25/BookApp.git; source BookApp/deploy.sh"